<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='COVIDDashboardVisualization' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (Tableu Table1)' inline='true' name='federated.0pydze41gksn0u143otm014plglo' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableu Table1' name='excel-direct.0lymsex1ixcin61aked500j6b9z7'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/Kampus/PROJECT DATA SCIENTIST PORTFOLIO/Excel/Tableu Table1.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0lymsex1ixcin61aked500j6b9z7' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_9C389AA9DE714D6C90B628BFDE4CAD12]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_9C389AA9DE714D6C90B628BFDE4CAD12]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_9C389AA9DE714D6C90B628BFDE4CAD12]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_9C389AA9DE714D6C90B628BFDE4CAD12]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/RADEND~1.N/AppData/Local/Temp/TableauTemp/#TableauTemp_02munlv0615dqp18pzyz01run4kk.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='01/04/2025 02:06:28 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DeathPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathPercentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_9C389AA9DE714D6C90B628BFDE4CAD12'>
            <properties context=''>
              <relation connection='excel-direct.0lymsex1ixcin61aked500j6b9z7' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableu Table2)' inline='true' name='federated.0q1fkcn1a9scix11vhxe10ngr0as' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableu Table2' name='excel-direct.1m8buu61xcx0j213y21us1b0xz9x'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/Kampus/PROJECT DATA SCIENTIST PORTFOLIO/Excel/Tableu Table2.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1m8buu61xcx0j213y21us1b0xz9x' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_34327991729A45C88BB22930863939F7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_34327991729A45C88BB22930863939F7]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_34327991729A45C88BB22930863939F7]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/RADEND~1.N/AppData/Local/Temp/TableauTemp/#TableauTemp_1vjegrj1w1fkoo18qknps0l00087.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='01/04/2025 02:07:02 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeathCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeathCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeathCount</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout common-percentage='1' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' user-set-layout-v2='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='orange_10_0' type='palette'>
            <map to='#a64122'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#d25921'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#e96b20'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f07e27'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f59c3c'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#f9b665'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_34327991729A45C88BB22930863939F7'>
            <properties context=''>
              <relation connection='excel-direct.1m8buu61xcx0j213y21us1b0xz9x' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableu Table3)' inline='true' name='federated.0up5hp816nns4x178abax0v46r7e' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableu Table3' name='excel-direct.0fd8vid1h8a9al11ughc70igrrug'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/Kampus/PROJECT DATA SCIENTIST PORTFOLIO/Excel/Tableu Table3.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0fd8vid1h8a9al11ughc70igrrug' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D220:no:A1:D220:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_F8028D39072A4716A5B2F4B5CD95AEAA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_F8028D39072A4716A5B2F4B5CD95AEAA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_F8028D39072A4716A5B2F4B5CD95AEAA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_F8028D39072A4716A5B2F4B5CD95AEAA]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_F8028D39072A4716A5B2F4B5CD95AEAA]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/RADEND~1.N/AppData/Local/Temp/TableauTemp/#TableauTemp_0xr4tk40cfwjp11e2jy601hncx12.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='01/04/2025 02:07:15 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>219</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>218</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_F8028D39072A4716A5B2F4B5CD95AEAA'>
            <properties context=''>
              <relation connection='excel-direct.0fd8vid1h8a9al11ughc70igrrug' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableu Table4)' inline='true' name='federated.1wb0gz41cn5q4z18of6s3185xvng' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableu Table4' name='excel-direct.01ksm7f1pli84k1f7q175016vf7n'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/Kampus/PROJECT DATA SCIENTIST PORTFOLIO/Excel/Tableu Table4.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.01ksm7f1pli84k1f7q175016vf7n' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_72A1ECFF30F24A6DBF258639444B3F5F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_72A1ECFF30F24A6DBF258639444B3F5F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_72A1ECFF30F24A6DBF258639444B3F5F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_72A1ECFF30F24A6DBF258639444B3F5F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_72A1ECFF30F24A6DBF258639444B3F5F]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_72A1ECFF30F24A6DBF258639444B3F5F]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Location]' derivation='Attribute' name='[attr:Location:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/RADEND~1.N/AppData/Local/Temp/TableauTemp/#TableauTemp_19m674d19skt9a13gcsti09rw5yd.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='01/04/2025 02:07:25 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>298</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Sheet1_72A1ECFF30F24A6DBF258639444B3F5F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>289</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_72A1ECFF30F24A6DBF258639444B3F5F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1428</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_72A1ECFF30F24A6DBF258639444B3F5F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17308</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_72A1ECFF30F24A6DBF258639444B3F5F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28756</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_72A1ECFF30F24A6DBF258639444B3F5F]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_72A1ECFF30F24A6DBF258639444B3F5F'>
            <properties context=''>
              <relation connection='excel-direct.01ksm7f1pli84k1f7q175016vf7n' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableu Table1)' name='federated.0pydze41gksn0u143otm014plglo' />
          </datasources>
          <datasource-dependencies datasource='federated.0pydze41gksn0u143otm014plglo'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pydze41gksn0u143otm014plglo].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0pydze41gksn0u143otm014plglo].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0pydze41gksn0u143otm014plglo].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0pydze41gksn0u143otm014plglo].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0pydze41gksn0u143otm014plglo].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0pydze41gksn0u143otm014plglo].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0pydze41gksn0u143otm014plglo].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0pydze41gksn0u143otm014plglo].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0pydze41gksn0u143otm014plglo].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0pydze41gksn0u143otm014plglo].[:Measure Names]' value='202' />
            <format attr='height' value='85' />
            <format attr='font-weight' data-class='subtotal' value='bold' />
            <format attr='font-size' data-class='subtotal' value='12' />
            <format attr='text-format' field='[federated.0pydze41gksn0u143otm014plglo].[Multiple Values]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.0pydze41gksn0u143otm014plglo].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#f9e9e0' />
            <format attr='background-color' data-class='total' value='#f9e9e0' />
            <format attr='background-color' data-class='subtotal' value='#f9e9e0' />
            <format attr='background-color' scope='rows' value='#f9e9e0' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#d4d4d4' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#333333' />
            <format attr='stroke-size' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0pydze41gksn0u143otm014plglo].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2.1988949775695801' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0pydze41gksn0u143otm014plglo].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{C026ADAA-452F-42CA-8765-A236E5121CFE}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths Per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableu Table2)' name='federated.0q1fkcn1a9scix11vhxe10ngr0as' />
          </datasources>
          <datasource-dependencies datasource='federated.0q1fkcn1a9scix11vhxe10ngr0as'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0q1fkcn1a9scix11vhxe10ngr0as].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0q1fkcn1a9scix11vhxe10ngr0as].[none:location:nk]' value='106' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0q1fkcn1a9scix11vhxe10ngr0as].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3403314352035522' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0q1fkcn1a9scix11vhxe10ngr0as].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.0q1fkcn1a9scix11vhxe10ngr0as].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{B81DCBDD-F818-447B-ABD9-21E75FA18148}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableu Table3)' name='federated.0up5hp816nns4x178abax0v46r7e' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0up5hp816nns4x178abax0v46r7e'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0up5hp816nns4x178abax0v46r7e].[Longitude (generated)]' field-type='quantitative' max='13673201.87280925' min='-11463576.667366002' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0up5hp816nns4x178abax0v46r7e].[Latitude (generated)]' field-type='quantitative' max='7917961.0619643154' min='-3551552.9546414004' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0up5hp816nns4x178abax0v46r7e].[sum:PercentPopulationInfected:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0up5hp816nns4x178abax0v46r7e].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0up5hp816nns4x178abax0v46r7e].[none:Location:nk]' />
              <color column='[federated.0up5hp816nns4x178abax0v46r7e].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.0up5hp816nns4x178abax0v46r7e].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0up5hp816nns4x178abax0v46r7e].[Latitude (generated)]</rows>
        <cols>[federated.0up5hp816nns4x178abax0v46r7e].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{0B26A661-0E7D-43AA-8658-F3083259BCFA}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableu Table4)' name='federated.1wb0gz41cn5q4z18of6s3185xvng' />
          </datasources>
          <datasource-dependencies datasource='federated.1wb0gz41cn5q4z18of6s3185xvng'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wb0gz41cn5q4z18of6s3185xvng].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1wb0gz41cn5q4z18of6s3185xvng].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1wb0gz41cn5q4z18of6s3185xvng].[tmn:date:qk]' scope='cols' value='Month ' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1wb0gz41cn5q4z18of6s3185xvng].[tmn:date:qk]' value='131' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1wb0gz41cn5q4z18of6s3185xvng].[none:Location:nk]' />
              <text column='[federated.1wb0gz41cn5q4z18of6s3185xvng].[none:Location:nk]' />
              <color column='[federated.1wb0gz41cn5q4z18of6s3185xvng].[none:Forecast Indicator:nk]' />
              <text column='[federated.1wb0gz41cn5q4z18of6s3185xvng].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wb0gz41cn5q4z18of6s3185xvng].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.1wb0gz41cn5q4z18of6s3185xvng].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{FDFB77F8-805B-4918-B9EE-1EE6BEDD0CE1}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98002' id='8' param='horz' type-v2='layout-flow' w='99034' x='483' y='999'>
            <zone h='98002' id='6' type-v2='layout-basic' w='89438' x='483' y='999'>
              <zone h='24500' id='3' name='Sheet 1' w='44719' x='483' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='36673' id='5' name='Sheet 2' w='44719' x='483' y='25499'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='61173' id='10' name='Sheet 3' w='44719' x='45202' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='36829' id='12' name='Sheet 4' w='77912' x='483' y='62172'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='36829' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.1wb0gz41cn5q4z18of6s3185xvng].[none:Location:nk]&#10;[federated.1wb0gz41cn5q4z18of6s3185xvng].[none:Forecast Indicator:nk]' type-v2='color' w='11526' x='78395' y='62172'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='159' h='98002' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='9596' x='89921' y='999'>
              <zone h='19476' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.0q1fkcn1a9scix11vhxe10ngr0as].[none:location:nk]' type-v2='color' w='9596' x='89921' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9114' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.0up5hp816nns4x178abax0v46r7e].[sum:PercentPopulationInfected:qk]' type-v2='color' w='9596' x='89921' y='20475'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='23' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98002' id='22' param='vert' type-v2='layout-flow' w='99034' x='483' y='999'>
                <zone fixed-size='188' h='24500' id='3' is-fixed='true' name='Sheet 1' w='44719' x='483' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='61173' id='10' is-fixed='true' name='Sheet 3' w='44719' x='45202' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9114' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.0up5hp816nns4x178abax0v46r7e].[sum:PercentPopulationInfected:qk]' type-v2='color' w='9596' x='89921' y='20475'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36673' id='5' is-fixed='true' name='Sheet 2' w='44719' x='483' y='25499'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='19476' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.0q1fkcn1a9scix11vhxe10ngr0as].[none:location:nk]' type-v2='color' w='9596' x='89921' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36829' id='12' is-fixed='true' name='Sheet 4' w='77912' x='483' y='62172'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='36829' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.1wb0gz41cn5q4z18of6s3185xvng].[none:Location:nk]&#10;[federated.1wb0gz41cn5q4z18of6s3185xvng].[none:Forecast Indicator:nk]' type-v2='color' w='11526' x='78395' y='62172'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{492D74AA-C421-4AC2-8D65-0EC77C7209B9}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pydze41gksn0u143otm014plglo].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5E5F6062-B322-4ADB-B0E0-3A5EFB57AADF}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0q1fkcn1a9scix11vhxe10ngr0as].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q1fkcn1a9scix11vhxe10ngr0as].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{52635EBB-B0F9-4457-8D6D-CBB57E3789A9}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0up5hp816nns4x178abax0v46r7e].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0up5hp816nns4x178abax0v46r7e].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{BAFDECAD-9D68-4F1C-A194-97378FBE10E7}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wb0gz41cn5q4z18of6s3185xvng].[none:Location:nk]&#10;[federated.1wb0gz41cn5q4z18of6s3185xvng].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wb0gz41cn5q4z18of6s3185xvng].[attr:Location:nk]</field>
            <field>[federated.1wb0gz41cn5q4z18of6s3185xvng].[none:Forecast Indicator:nk]</field>
            <field>[federated.1wb0gz41cn5q4z18of6s3185xvng].[none:Location:nk]</field>
            <field>[federated.1wb0gz41cn5q4z18of6s3185xvng].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9A7CA25C-A905-48CF-B7DF-CB546719C4EE}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0q1fkcn1a9scix11vhxe10ngr0as].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1wb0gz41cn5q4z18of6s3185xvng].[none:Forecast Indicator:nk]</field>
              <field>[federated.1wb0gz41cn5q4z18of6s3185xvng].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{166A2C5D-2644-4852-A5D9-D3B4C3C86D1D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='91' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      6uWX2AYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      TRrBoqX9f7EjUO3kzQD8AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
